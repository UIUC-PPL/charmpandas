module partition
{
    message GatherTableDataMsg
    {
        char data[];
    };

    message JoinTableDataMsg
    {
        char data[];
    };

    message GroupByReductionMsg
    {
        char table[];
        char options[];
    };

    group Aggregator
    {
        entry Aggregator();

        entry void gather_table(GatherTableDataMsg* msg);
    }

    array [1D] Partition
    {
        entry Partition(int num_partitions, CProxy_Aggregator agg_proxy);

        entry void receive_command(int epoch, int size, char cmd[size]);

        entry void start()
        {
            while (EPOCH > -1)
            {
                when receive_command[EPOCH] (int epoch, int size, char cmd[size])
                    serial "execute command" {
                        execute_command(epoch, size, cmd);
                    }
            }
        };
    };
}